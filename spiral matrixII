//54. Spiral Matrix II

public class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        List<Integer> list = new ArrayList<>();
        if (matrix == null || matrix.length == 0) return list;
        int row = matrix.length - 1, col = matrix[0].length - 1;
        int circle = (row < col ? row : col) / 2 + 1;
        int start = 0, end = col - 1;
        while (start < circle) {
            printOrder(matrix, start++, row--, col--, list);
        }
        return list;
    }
    public void printOrder(int[][] matrix, int start, int row, int col, List<Integer> list) {
        for (int i = start; i <= col; i++) {
            list.add(matrix[start][i]);
        }
        if (start < row) {
            for (int i = start + 1; i <= row; i++) {
                list.add(matrix[i][col]);
            }
        }
        if (start < row && start < col) {
            for (int i = col - 1; i >= start; i--) {
                list.add(matrix[row][i]);
            }
        }
        if (start < row - 1 && start < col) {
            for (int i = row - 1; i > start; i--) {
                list.add(matrix[i][start]);
            }
        }
    }
}


