#236. Lowest Common Ancestor of a Binary Tree
/*思路：若当前节点为两个给定节点中的一个，则最低公共祖先为当前节点，否则的话分别递归去左子树和右子树里去找，找到给定节点，返回，否则，返回null
        最后如果左右子树都找到了，最低公共祖先为当前根节点，
*/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        if (root == null || p == null || q == null) return null;
        if (root == p || root == q) return root;
        TreeNode left = lowestCommonAncestor(root.left, p, q);
        TreeNode right = lowestCommonAncestor(root.right, p, q);
        if (left != null && right != null) return root;
        return left == null ? right : left;
    }
}
